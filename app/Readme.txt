Тестовое задание на позицию Android Developer - 

Цель
Разработать простое приложение, использующее Twitter API (https://dev.twitter.com/overview/api),
конкретно только публичные endpoints, без необходимости OAuth-авторизации пользователей.

Требования к UI/UX
Главный экран содержит в себе navigation drawer с 3мя опциями: Search, Nearby и Favorites.

Search
*   Поле для поиска твитов по заданному пользователем ключевому слову, hashtag или mention.
*   Под ним список твитов с возможностью догрузки при доскролливании до низу.
*   Твиты запрашиваются по мере набора, изменения или удаления ключевого слова в поле поиска
*   Каждый твит отображает аватарку, имя автора, текст твита.
    Сделать ссылки, mentions и hashtags кликабельными (формируем новый поисковый запрос по этому hashtag или mention).
*   Pull-to-refresh обновляет ленту, загружает новые твиты сверху.
*   Для каждого твита существует возможность добавления его в избранные
    (кнопка звездочка, меню доступное по жесту - на усмотрение автора).
    Каждый ‘favorited’ твит должен иметь соответствующую индикацию в поисковой выдаче
    и может быть удалён пользователем из списка (список всегда доступен через упомянутую выше секцию Favorites).

Nearby
*   Список твитов, которые были твитнуты рядом с текущей локацией устройства - в радиусе 10км.
*   Требования 2-6, такие же как для экрана поиска.

Favorites
*   Тут должно быть все интуитивно понятно: список твитов добавленных в избранные.
*   Сделать возможность удалять твиты из этого списка.
*   Храним каждый перманентно (между запусками) пока твит не удален, или приложение не удалено с устройства.

Прочие требования
*   Java 1.7.
*   Минимальная поддерживаемая версия ОС: Android Lollipop.
*   Поддержка только смартфонов, планшеты не обязательно.
*   Использование сторонних библиотек допустимо.
*   Основное требование - это чтобы у нас во время проверки при сборке приложения в Android Studio
    и запуске его на эмуляторе не возникло проблем с зависимостями.
    Т.е. мы должны склонировать репозиторий, открыть его в Android Studio
    и он должен собраться без каких-либо дополнительных телодвижений с нашей стороны.
*   Код присылать в виде ссылки на github или bitbucket репозиторий.


    
Требования к приложению ЧЕТКО заявлены в ТЗ..

- есть дублирование кода  
    
  Ответ: FIXED.

- не правильно организована работа с асинхроностью.
  В методе Utility.getTwitterInstance() создается новый поток и запускаеться бекграунд задача, 
  но ожидание этой задачи происходит в UI потоке из-за вызова thread.join(); 

  Ответ: Этот код для того чтоб запрос выполнялся до того как будет затребован в основной логике OAuth2Token.
         Правильно - описать слушателя через интерфейс.. Но это ТЕСТОВОЕ задание!!!!

- не оправданное порождение объектов при каждом вызове Utility.getTwitterInstance()

  Ответ: FIXED

- фрагменты не пригодны к использованию в нескольких экзеплярах из-за того что экземпляр фрагмента храниться в статик поле
        static private Search instance;

        public static Search getInstance() {
                if (instance == null)
                    instance = new Search();
                return instance;
        }

  фрагменты создавались для того что бы была возможность их переиспользовать при таком подходе это не возможно.

- не орагнизована работа при смене конфигурации. При повороте экрана всегда показываеться Search фрагмент.
  Неважно на каком экране находимс    

  Ответ: Читаем ТЗ - ищем повороты экрана...

- строки не в ресурсах. Это будет большая проблема если необходимо будет добавть поддержку нескольких языков. 
  
  Ответ: Это ТЕСТОВОЕ задание!!!!
  
- странный код стайл в проекте. Некоторые методы с заглавной BackPressedAction(), некоторые с маленькой. 
  Разные стили именования переменных: mActionBarToolbar. 

  Ответ: Это ТЕСТОВОЕ задание!!!!

  Итого:
  Замечания по коду обоснованы только в двух случаях, в целом задача функциональна и выполнена согласно ТЗ. 
  Критических ошибок - НЕТ.
  Отказ считаю надуманным.